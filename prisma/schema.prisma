generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum BayType {
  PRIME
  STANDARD
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
}

model Bay {
  id        String    @id @default(cuid())
  name      String    @unique
  type      BayType
  capacity  Int
  createdAt DateTime  @default(now())
  bookings  Booking[]
}

model Service {
  id              String    @id @default(cuid())
  name            String    @unique
  slug            String    @unique
  durationMinutes Int
  priceCents      Int
  createdAt       DateTime  @default(now())
  bookings        Booking[]
}

model Customer {
  id        String    @id @default(cuid())
  fullName  String
  email     String    @unique
  phone     String?
  createdAt DateTime  @default(now())
  bookings  Booking[]
}

model Booking {
  id               String        @id @default(cuid())
  customerId       String
  customer         Customer      @relation(fields: [customerId], references: [id])
  bayId            String
  bay              Bay           @relation(fields: [bayId], references: [id])
  serviceId        String
  service          Service       @relation(fields: [serviceId], references: [id])
  partySize        Int
  startTime        DateTime      @db.Timestamptz(6)
  endTime          DateTime      @db.Timestamptz(6)
  status           BookingStatus @default(CONFIRMED)
  confirmationCode String        @unique
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  @@index([bayId, startTime])
  @@index([startTime, endTime])
}
